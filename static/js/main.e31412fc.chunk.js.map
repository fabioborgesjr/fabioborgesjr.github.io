{"version":3,"sources":["helpers/Constants.js","reducers/main.js","features/home/Home.js","features/about/About.js","features/projects/Projects.js","features/posts/Posts.js","features/header/Header.js","features/footer/Footer.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["headersObject","home","about","projects","posts","mainSlice","createSlice","name","initialState","activePage","reducers","setActivePage","state","payload","document","title","getActivePage","main","actions","page","Home","dispatch","useDispatch","useEffect","className","src","alt","About","Projects","Posts","Header","props","useSelector","getClassName","text","handleClick","event","headerClicked","target","preventDefault","Object","keys","map","index","link","key","to","onClick","Footer","rel","href","icon","library","add","fab","App","path","configureStore","reducer","mainReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e31412fc.chunk.js","sourcesContent":["export const headersObject = {\r\n  home: \"Home\",\r\n  about: \"About\",\r\n  projects: \"Projects\",\r\n  posts: \"Posts\",\r\n};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const mainSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    activePage: \"\",\r\n  },\r\n  reducers: {\r\n    setActivePage: (state, {payload}) => {\r\n      document.title = `${payload} | Fábio Borges Júnior`;\r\n\r\n      state.activePage = payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const getActivePage = state => state.main.activePage;\r\n\r\nexport const { setActivePage } = mainSlice.actions;\r\n\r\nexport default mainSlice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { headersObject } from \"../../helpers/Constants\";\r\nimport { setActivePage } from \"../../reducers/main\";\r\nimport \"./Home.scss\";\r\n\r\nconst page = headersObject.home;\r\n\r\nexport default function Home() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(setActivePage(page));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <img\r\n        className=\"home__photo\"\r\n        src=\"https://avatars.githubusercontent.com/salazenas\"\r\n        alt=\"Homepage\"\r\n      />\r\n      <div className=\"home__intro\">\r\n        <h1>Hi, I'm Fábio and be welcome!</h1>\r\n        <article>\r\n          <span>\r\n            {\r\n              \"I'm a brazilian developer with 3+ years of experience, working\" +\r\n              \" at the most of time in web applications development \" +\r\n              \"with ReactJS and NodeJS. \"\r\n            }\r\n            <strong>\r\n               I'm going to do the same with mobile development!\r\n            </strong>\r\n          </span>\r\n        </article>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { headersObject } from \"../../helpers/Constants\";\r\nimport {\r\n  setActivePage\r\n} from '../../reducers/main';\r\n\r\nconst page = headersObject.about;\r\n\r\nexport default function About() {\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(setActivePage(page));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { headersObject } from \"../../helpers/Constants\";\r\nimport {\r\n  setActivePage\r\n} from '../../reducers/main';\r\n\r\nconst page = headersObject.projects;\r\n\r\nexport default function Projects() {\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(setActivePage(page));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { headersObject } from \"../../helpers/Constants\";\r\nimport {\r\n  setActivePage\r\n} from '../../reducers/main';\r\n\r\nconst page = headersObject.posts;\r\n\r\nexport default function Posts() {\r\n  const dispatch = useDispatch();\r\n  \r\n  useEffect(() => {\r\n    dispatch(setActivePage(page));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.scss\";\r\nimport { headersObject } from \"../../helpers/Constants\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setActivePage,\r\n  getActivePage\r\n} from '../../reducers/main';\r\n\r\nfunction Header(props) {\r\n  const activePage = useSelector(getActivePage);\r\n  const dispatch = useDispatch();\r\n\r\n  const getClassName = (text) => {\r\n    return text === activePage ? \"active\" : \"\";\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    const headerClicked = event.target.text;\r\n\r\n    if (headerClicked === activePage) {\r\n      event.preventDefault();\r\n    } else {\r\n      dispatch(setActivePage(headerClicked));\r\n    }\r\n  }\r\n\r\n  const getLink = (link, text) => {\r\n    return (\r\n      <li key={link}>\r\n        <Link className={getClassName(text)} to={`/${link}`} onClick={handleClick}>\r\n          {text}\r\n        </Link>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <ul>\r\n        {Object.keys(headersObject).map((index) => getLink(index, headersObject[index]))}\r\n      </ul>\r\n    </header>\r\n  );\r\n}\r\n\r\nHeader.propTypes = {};\r\n\r\nexport default Header;\r\n","import React from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport \"./Footer.scss\";\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span>\r\n        © 2017-2020 - Fábio Borges Júnior\r\n      </span>\r\n      <div>\r\n        <ul className=\"footer__list\">\r\n          <li className=\"footer__list-item\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.linkedin.com/in/fabioborgesjr/\">\r\n              <FontAwesomeIcon icon={['fab', 'linkedin']} />\r\n            </a>\r\n          </li>\r\n          <li className=\"footer__list-item\">\r\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/salazenas\">\r\n              <FontAwesomeIcon icon={['fab', 'github']} />\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </footer>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./features/home/Home\";\r\nimport About from \"./features/about/About\";\r\nimport Projects from \"./features/projects/Projects\";\r\nimport Posts from \"./features/posts/Posts\";\r\nimport Header from \"./features/header/Header\";\r\nimport Footer from \"./features/footer/Footer\";\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nimport \"./App.css\";\r\n\r\nlibrary.add(fab);\r\n\r\nfunction App(props) {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/home\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/projects\">\r\n            <Projects />\r\n          </Route>\r\n          <Route path=\"/posts\">\r\n            <Posts />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n        <Footer/>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport mainReducer from '../reducers/main';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    main: mainReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}